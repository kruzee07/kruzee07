name: Dynamic Daily Commit

on:
  schedule:
    - cron: '0 0 * * *'  # Runs daily at midnight UTC
  workflow_dispatch:  # Allows manual trigger

permissions:
  contents: write  # Grant write permissions to push changes

jobs:
  commit:
    runs-on: ubuntu-latest

    steps:
    # Step 1: Checkout the repository
    - name: Checkout repository
      uses: actions/checkout@v3

    # Step 2: Set up Git identity
    - name: Set up Git identity
      run: |
        git config --global user.email "krutarthghuge@trentu.ca"
        git config --global user.name "GitHub Commit Bot"

    # Step 3: Modify a file with dynamic content
    - name: Modify file with dynamic content
      run: |
        # Get the current day of the week (1-7, Monday-Sunday)
        DAY_OF_WEEK=$(date +'%u')  # 1 for Monday, 7 for Sunday

        # Skip commit on Sunday
        if [ "$DAY_OF_WEEK" -eq 7 ]; then
          echo "It's Sunday, skipping commits."
          exit 0
        fi

        # Assign multipliers for each day
        case $DAY_OF_WEEK in
          1|4) BASE_MULTIPLIER=3 ;;  # Monday, Thursday
          2) BASE_MULTIPLIER=5 ;;    # Tuesday
          3) BASE_MULTIPLIER=2 ;;    # Wednesday
          5|6) BASE_MULTIPLIER=4 ;;  # Friday, Saturday
        esac

        # Get the current date (day of the month)
        DAY_OF_MONTH=$(date +'%d')

        # Determine commit count based on the sequence of dates
        SEQUENCE=$(( (DAY_OF_MONTH - 1) % 3 ))
        case $SEQUENCE in
          0) DATE_MULTIPLIER=4 ;;  # 1, 4, 7...
          1) DATE_MULTIPLIER=8 ;;  # 2, 5, 8...
          2) DATE_MULTIPLIER=3 ;;  # 3, 6, 9...
        esac

        # Calculate the total number of commits
        NUM_COMMITS=$((BASE_MULTIPLIER * DATE_MULTIPLIER))

        # Loop to make multiple commits
        for i in $(seq 1 $NUM_COMMITS); do
          RANDOM_NUMBER=$((RANDOM % 1000))
          TIMESTAMP=$(TZ="America/New_York" date +"%Y-%m-%d %H:%M:%S %Z")
          COMMIT_MESSAGE="Commit $i made at $TIMESTAMP with random number: $RANDOM_NUMBER"
          echo "$COMMIT_MESSAGE" > auto_commit_log.txt
          git add auto_commit_log.txt
          git commit -m "$COMMIT_MESSAGE"
        done

    # Step 4: Push changes
    - name: Push changes
      run: |
        git push
